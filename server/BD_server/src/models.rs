// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]
use super::schema::constr_attr;
use super::schema::contract;
use super::schema::department;
use super::schema::department_head;
use super::schema::eng_attr;
use super::schema::eq_group_list;
use super::schema::equipment;
use super::schema::equipment_type;
use super::schema::group_types;
use super::schema::lab_attr;
use super::schema::mech_attr;
use super::schema::project;
use super::schema::worker;
use super::schema::worker_types;
use super::schema::working_company;
use super::schema::eq_group;
use super::schema::groups;
use super::schema::pc_bind;
use super::schema::groups_bind;
use super::schema::company;
/*use super::schema::groups_bind;*/


use chrono::NaiveDateTime;
use diesel::PgConnection;
use serde_json::Value;

#[derive(Queryable, Debug, Identifiable,Deserialize, Serialize)]
#[primary_key(company_name)]
#[table_name="company"]
pub struct Company {
    pub company_name: String,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize)]
#[belongs_to(Worker, foreign_key = "worker_id")]
#[primary_key(worker_id)]
#[derive(AsChangeset)]
#[table_name="constr_attr"]
pub struct ConstrAttr {
    pub worker_id: i32,
    pub cert_number: i32,
}

#[derive(Queryable, Debug, Identifiable,Deserialize, Serialize)]
#[primary_key(contract_id)]
#[derive(AsChangeset)]
#[table_name="contract"]
pub struct Contract {
    pub contract_id: i32,
    pub cost: Option<i64>,
    pub contract_start: NaiveDateTime,
    pub contract_end: NaiveDateTime,
}

#[derive(Queryable, Debug, Identifiable,Deserialize, Serialize)]
#[primary_key(department_name)]
#[table_name="department"]
pub struct Department {
    pub department_name: String,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize)]
#[belongs_to(Department, foreign_key = "department_name")]
#[belongs_to(Worker, foreign_key = "worker_id")]
#[primary_key(department_name)]
#[derive(AsChangeset)]
#[table_name="department_head"]
pub struct DepartmentHead {
    pub department_name: String,
    pub worker_id: i32,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize)]
#[belongs_to(Worker, foreign_key = "worker_id")]
#[primary_key(worker_id)]
#[derive(AsChangeset)]
#[table_name="eng_attr"]
pub struct EngAttr {
    pub worker_id: i32,
    pub category: i32,
}

#[derive(Queryable, Debug, Identifiable,Deserialize, Serialize)]
#[primary_key(eq_list_id)]
#[table_name="eq_group_list"]
pub struct EqGroupList {
    pub eq_list_id: i32,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize,QueryableByName)]
#[belongs_to(EquipmentType, foreign_key = "type_")]
#[belongs_to(Department, foreign_key = "department_name")]
#[primary_key(eq_id)]
#[derive(AsChangeset)]
#[table_name="equipment"]
pub struct Equipment {
    pub eq_id: i32,
    pub name: String,
    pub department_name: Option<String>,
    pub type_: String,
}

#[derive(Queryable, Debug, Identifiable,Deserialize, Serialize)]
#[primary_key(type_)]
#[table_name="equipment_type"]
pub struct EquipmentType {
    pub type_: String,
}

#[derive(Queryable, Debug, Identifiable,Deserialize, Serialize)]
#[primary_key(group_type)]
#[table_name="group_types"]
pub struct GroupTypes {
    pub group_type: String,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize)]
#[belongs_to(GroupTypes, foreign_key = "group_type")]
#[primary_key(group_id)]
#[derive(AsChangeset)]
#[table_name="groups_bind"]
pub struct GroupsBind {
    pub group_id: i32,
    pub cost: i64,
    pub group_type: String,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize)]
#[belongs_to(Worker, foreign_key = "worker_id")]
#[primary_key(worker_id)]
#[derive(AsChangeset)]
#[table_name="lab_attr"]
pub struct LabAttr {
    pub worker_id: i32,
    pub lab_number: i64,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize)]
#[belongs_to(Worker, foreign_key = "worker_id")]
#[primary_key(worker_id)]
#[derive(AsChangeset)]
#[table_name="mech_attr"]
pub struct MechAttr {
    pub worker_id: i32,
    pub repair_type: String,
}

#[derive(Queryable, Debug, Identifiable,Deserialize, Serialize)]
#[primary_key(project_id)]
#[derive(AsChangeset)]
#[table_name="project"]
pub struct Project {
    pub project_id: i32,
    pub cost: Option<i64>,
    pub data: Option<Value>
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize,QueryableByName)]
#[belongs_to(Department, foreign_key = "department_name")]
#[belongs_to(WorkerTypes, foreign_key = "worker_type")]
#[primary_key(worker_id)]
#[derive(AsChangeset)]
#[table_name="worker"]
pub struct Worker {
    pub worker_id: i32,
    pub firstname: String,
    pub secondname: Option<String>,
    pub familyname: String,
    pub age: i32,
    pub salary: i64,
    pub department_name: String,
    pub worker_type: String,
}

#[derive(Queryable, Debug, Identifiable,Deserialize, Serialize)]
#[primary_key(worker_type)]
#[table_name="worker_types"]
pub struct WorkerTypes {
    pub worker_type: String,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize)]
#[belongs_to(GroupsBind, foreign_key = "group_id")]
#[belongs_to(Company, foreign_key = "company_name")]
#[primary_key(group_id)]
#[derive(AsChangeset)]
#[table_name="working_company"]
pub struct WorkingCompany {
    pub group_id: i32,
    pub company_name: String,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize)]
#[belongs_to(EqGroupList, foreign_key = "eq_list_id")]
#[belongs_to(Equipment, foreign_key = "eq_id")]
#[derive(AsChangeset)]
#[table_name="eq_group"]
#[primary_key(id)]
pub struct EqGroup{
    pub id: i32,
    pub eq_list_id: i32,
    pub eq_id: i32,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize)]
#[belongs_to(GroupsBind, foreign_key = "group_id")]
#[belongs_to(Worker, foreign_key = "worker_id")]
#[derive(AsChangeset)]
#[table_name="groups"]
#[primary_key(id)]
pub struct Groups{
    pub id: i32,
    pub group_id: i32,
    pub worker_id: i32,
}

#[derive(Queryable, Debug, Identifiable, Associations,Deserialize, Serialize)]
#[belongs_to(Contract, foreign_key = "contract_id")]
#[belongs_to(Project, foreign_key = "project_id")]
#[belongs_to(GroupsBind, foreign_key = "group_id")]
#[belongs_to(Worker, foreign_key = "head_id")]
#[belongs_to(EqGroupList, foreign_key = "eq_list_id")]
#[primary_key(contract_id,project_id)]
#[derive(AsChangeset)]
#[table_name="pc_bind"]
pub struct PcBind {
    pub contract_id: i32,
    pub project_id: i32,
    pub group_id: i32,
    pub head_id: i32,
    pub project_start: NaiveDateTime,
    pub project_end: NaiveDateTime,
    pub eq_list_id: i32,
}


